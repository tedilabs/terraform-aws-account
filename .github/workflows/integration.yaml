name: Integration

on:
  push:
    branches:
    - main
  pull_request: {}

concurrency:
  group: integration-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changed:
    runs-on: ubuntu-latest

    outputs:
      terraform_modules_changed: ${{ steps.filter-terraform-modules.outputs.changed }}
      terraform_modules_files: ${{ steps.filter-terraform-modules.outputs.files }}
      terraform_modules_dirs: ${{ steps.filter-terraform-modules.outputs.dirs }}
      yaml_changed: ${{ steps.filter-yaml.outputs.changed }}
      yaml_files: ${{ steps.filter-yaml.outputs.files }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get Changed Files
      id: changed-files
      uses: dorny/paths-filter@v2
      with:
        list-files: json
        filters: |
          modules:
          - 'modules/**'
          yaml:
          - '**/*.yaml'
          - '**/*.yml'

    - name: Filter changed Terraform Modules files to outputs
      id: filter-terraform-modules
      run: |
        dirs=$(echo '${{ steps.changed-files.outputs.modules_files }}' | jq '[.[] | match("modules/[^/]+").string] | unique')
        echo ::set-output name=changed::${{ steps.changed-files.outputs.modules }}
        echo ::set-output name=files::${{ steps.changed-files.outputs.modules_files }}
        echo ::set-output name=dirs::$dirs

    - name: Filter changed YAML files to outputs
      id: filter-yaml
      run: |
        echo ::set-output name=changed::${{ steps.changed-files.outputs.yaml }}
        echo ::set-output name=files::${{ steps.changed-files.outputs.yaml_files }}


  terraform:
    needs:
    - changed
    if: ${{ needs.changed.outputs.terraform_modules_changed != 'false' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        path: ${{ fromJson(needs.changed.outputs.terraform_modules_dirs) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set-up terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform fmt
      id: terraform-fmt
      working-directory: ${{ matrix.path }}
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Validate
      id: terraform-validate
      working-directory: ${{ matrix.path }}
      run: |
        terraform init -backend=false
        terraform validate -no-color


  yaml:
    needs:
    - changed
    if: ${{ needs.changed.outputs.yaml_changed != 'false' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Lint YAML Files
      id: yaml-lint
      run: |
        yamllint .
